{"version":3,"sources":["Components/Header/Header.js","App.js","index.js"],"names":["Header","react_default","a","createElement","className","App","state","signIn","role","modalShow","signInShow","radio","radioOnClick","nr","selectedRole","_this","setState","signInClick","responseGoogle","response","idToken","tokenObj","id_token","axios","post","then","res","catch","error","console","log","_this2","this","displaySignIn","display","displayUpload","Components_Header_Header","ButtonToolbar","Button","color","onClick","style","Modal","show","onHide","size","aria-labelledby","centered","closeButton","Title","id","Body","Form","mdbreact_esm","md","icon","checked","label","type","google_login_default","clientId","buttonText","onSuccess","onFailure","Footer","Jumbotron","placeholder","aria-label","aria-describedby","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.aac3a5a0.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Header.css\";\n\nconst Header = () => (\n\t<header className = \"header\">\n\t\t<h1>Welcome to Snowhub!</h1>\n\t</header>\n);\nexport default Header;","import React, {Component} from \"react\";\nimport {Modal, Button, ButtonToolbar, Form, Jumbotron} from \"react-bootstrap\";\nimport GoogleLogin from 'react-google-login';\nimport { MDBInput, MDBContainer, MDBRow, MDBCol,MDBCardHeader, MDBCardBody,MDBCard, MDBIcon } from 'mdbreact';\nimport Header from \"./Components/Header/Header\"\nimport axios from \"axios\";\nclass App extends Component {\n  state ={\n    signIn: false,\n    role: \"Normal User\",\n    modalShow: false,\n    signInShow: true,\n    radio: 1\n  }\n  \n  radioOnClick = (nr) => {\n    let selectedRole = nr === 1 ? \"Normal User\" : \"Instructor\";\n    this.setState({\n      radio: nr,\n      role: selectedRole\n    });\n  }\n\n  signInClick = () => {\n    if (this.state.modalShow) {\n      this.setState({ modalShow: false })\n    }\n    else {\n      this.setState({ modalShow: true })\n    }\n  }\n\n  responseGoogle = (response) => {\n    let idToken = response.tokenObj.id_token;\n\n    axios.post(\"/api/tokensignin\", {\n        idToken: idToken,\n        role: this.state.role\n      })\n      .then(\n        (res) => {\n          if (res) {\n            this.setState({\n              signIn: true,\n              modalShow: false,\n              signInShow: false\n            })\n          }\n          else {\n            this.setState({\n              signIn: false,\n              modalShow: false,\n              signInShow: true\n            })\n          }\n        }\n      )\n      .catch(error => {console.log(error)})\n  }\n\n  render() {\n    const displaySignIn = this.state.signInShow ? {} : {display: \"none\"};\n    const displayUpload = this.state.signIn && (this.state.role === \"Normal User\") ? {} : {display: \"none\"};\n    return (\n      <div>\n        <Header/>\n        <ButtonToolbar>\n            <Button\n            color=\"light-blue\"\n            onClick={this.signInClick}\n            style={displaySignIn}\n            >\n              Sign In\n            </Button>\n            <Modal\n            show={this.state.modalShow}\n            onHide={this.signInClick}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n            >\n            <Modal.Header closeButton>\n              <Modal.Title id=\"contained-modal-title-vcenter\">\n              </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <Form>\n                <MDBContainer className=\"mt-5\">\n                  <MDBRow>\n                    <MDBCol md=\"6\">\n                      <MDBCard>\n                        <MDBCardBody>\n                          <MDBCardHeader className=\"form-header deep-blue-gradient rounded\">\n                            <h3 className=\"my-3\">\n                              <MDBIcon icon=\"lock\" /> Select your User type\n                            </h3>\n                          </MDBCardHeader>\n                          <MDBInput onClick={() => this.radioOnClick(1)} checked={this.state.radio===1 ? true : false} label=\"Normal User\" type=\"radio\"\n                            id=\"radio1\" />\n                          <MDBInput onClick={() => this.radioOnClick(2)} checked={this.state.radio===2 ? true : false} label=\"Instructor\" type=\"radio\"\n                            id=\"radio1\" />\n                        </MDBCardBody>\n                      </MDBCard>\n                    </MDBCol>\n                  </MDBRow>\n                </MDBContainer>\n                <GoogleLogin\n                  clientId=\"306631194753-3h405u0u64t43f1vd6dh5udkt0b85cb2.apps.googleusercontent.com\" //CLIENTID NOT CREATED YET\n                  buttonText=\"LOGIN WITH GOOGLE\"\n                  onSuccess={this.responseGoogle}\n                  onFailure={this.responseGoogle}\n                />\n              </Form>\n            </Modal.Body>\n            <Modal.Footer>\n            </Modal.Footer>\n            </Modal>\n        </ButtonToolbar>\n        <Jumbotron className=\"uploader\" style={displayUpload}>\n          <div className=\"input-group\">\n            <div className=\"input-group-prepend\"></div>\n            <input type=\"text\" className=\"form-control\" placeholder=\"Insert your url\" aria-label=\"Username\" aria-describedby=\"basic-addon\" />\n            <button className=\"input-group-text\" id=\"basic-addon\">\n              <i className=\"fa fa-plus-circle\"></i>\n            </button> \n          </div>\n       </Jumbotron>\n      </div>\n    );\n  }\n}\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}